insmod ntldr
insmod drivemap

function add_os_if_exists_uefi {
	if [ "${grub_platform}" == "efi" ]; then
		if [ "$grub_cpu" = "i386" ]; then
		set bootefi=bootia32.efi
		set grub=grubia32
		export bootefi
		export grub
		else
		set bootefi=BOOTx64.EFI
		set grub=grubx64
	fi
	for d in hd0,gpt1 hd0,gpt2 hd0,gpt3 hd0,gpt4 hd0,gpt5 hd1,gpt1 hd1,gpt2 hd1,gpt3 hd1,gpt4 hd1,gpt5 hd2,gpt1 hd2,gpt2 hd2,gpt3 hd2,gpt4 hd2,gpt5 hd3,gpt1 hd3,gpt2 hd3,gpt3 hd3,gpt4 hd3,gpt5; do
		if [ "($d)$1" != "$cmdpath/$bootefi" -a -e ($d)$1 ]; then
			menuentry "["$4"] $2 -->  $d$1" "$d" "$1" --class "$3" --hotkey="$4" {
				set root=$2
				chainloader ($root)$3
			}
			break
		fi
	done
    fi
}
    
function add_os_if_exists_legacy10 {
		set bootl10=/boot/BCD
		export boot10
	for d in hd0,msdos1 hd0,msdos2 hd0,msdos3 hd0,msdos4 hd0,msdos5 hd1,msdos1 hd1,msdos2 hd1,msdos3 hd1,msdos4 hd1,msdos5 hd2,msdos1 hd2,msdos2 hd2,msdos3 hd2,msdos4 hd2,msdos5 hd3,msdos1 hd3,msdos2 hd3,msdos3 hd3,msdos4 hd3,msdos5; do
		if [ "($d)$1" != "$cmdpath/$boot10" -a -e ($d)$1 ]; then
			menuentry "["$4"] $2 -->  $d$1" "$d" "$1" --class "$3" --hotkey="$4" {
				set root=$2
				regexp -s devnum 'hd([0-9]+)' $root
				if test "$devnum" != "0"; then
				drivemap -s hd0 $root
				fi
				ntldr ($root)$3
				boot
			}
			break
		fi
	done
 
}


function add_os_if_exists_legacyxp {
		set bootlxp=/boot.ini
		export bootxp
	for d in hd0,msdos1 hd0,msdos2 hd0,msdos3 hd0,msdos4 hd0,msdos5 hd1,msdos1 hd1,msdos2 hd1,msdos3 hd1,msdos4 hd1,msdos5 hd2,msdos1 hd2,msdos2 hd2,msdos3 hd2,msdos4 hd2,msdos5 hd3,msdos1 hd3,msdos2 hd3,msdos3 hd3,msdos4 hd3,msdos5; do
		if [ "($d)$1" != "$cmdpath/$bootxp" -a -e ($d)$1 ]; then
			menuentry "["$4"] $2 -->  $d$1" "$d" "$1" --class "$3" --hotkey="$4" {
				set root=$2
				regexp -s devnum 'hd([0-9]+)' $root
				if test "$devnum" != "0"; then
				drivemap -s hd0 $root
				fi
				ntldr ($root)$3
				boot
			}
			break
		fi
	done
 
}

if [ "${grub_platform}" == "efi" ]; then
	add_os_if_exists_uefi /EFI/fedora/${grub}.efi Fedora os_fedora f
	add_os_if_exists_uefi /EFI/centos/${grub}.efi CentOS os_centos t
	add_os_if_exists_uefi /EFI/ubuntu/${grub}.efi Ubuntu os_ubuntu u
	add_os_if_exists_uefi /EFI/ubuntu/shimx64.efi "Ubuntu Secure Boot" os_ubuntu s
	add_os_if_exists_uefi /EFI/debian/${grub}.efi Debian os_debian a
	add_os_if_exists_uefi /EFI/gentoo/${grub}.efi Gentoo os_gentoo g
	add_os_if_exists_uefi /EFI/redhat/${grub}.efi ReadHat os_redhat r
	add_os_if_exists_uefi /EFI/redhat/shim.efi "Readhat Secure Boot" os_redhat b
	add_os_if_exists_uefi /EFI/linuxmint/${grub}.efi "Linux Mint" os_linuxmint l
	add_os_if_exists_uefi /EFI/Microsoft/Boot/bootmgfw.efi "Windows 7/8/10 UEFI" OS_nt6 w
else
	add_os_if_exists_legacy10 /bootmgr "Windows 7/8/10 Legacy" OS_nt6 w
	add_os_if_exists_legacyxp /ntldr "Windows XP" OS_nt5 x
fi

menuentry "return to main menu" --class=Back {
   echo "return to main menu"
   configfile "${prefix}/menu.cfg"
}

